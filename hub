--!strict
-- Rixhu Fit Copy UI
-- LocalScript placed in StarterPlayerScripts or a GUI container

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local SoundService = game:GetService("SoundService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- SOUND ASSET
local CLICK_SOUND_ID = "rbxassetid://YOUR_CLICK_SOUND_ID"

-- BACKGROUND IMAGE ASSET
local BACKGROUND_IMAGE_ID = "rbxassetid://YOUR_BACKGROUND_IMAGE_ID"

-- Create Main UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RixhuFitCopyUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local bgFrame = Instance.new("ImageLabel")
bgFrame.Size = UDim2.new(1, 0, 1, 0)
bgFrame.Image = BACKGROUND_IMAGE_ID
bgFrame.BackgroundTransparency = 1
bgFrame.Parent = screenGui

-- Title
local title = Instance.new("TextLabel")
title.Text = "Rixhu Fit Copy"
title.Size = UDim2.new(1, 0, 0.1, 0)
title.Position = UDim2.new(0, 0, 0, 0)
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.Parent = bgFrame

-- Utility: Create rounded pop button
local function createButton(name: string, text: string, size: UDim2, position: UDim2)
	local button = Instance.new("TextButton")
	button.Name = name
	button.Size = size
	button.Position = position
	button.Text = text
	button.BackgroundColor3 = Color3.new(0, 0, 0)
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Font = Enum.Font.Gotham
	button.TextScaled = true
	button.AutoButtonColor = false
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 12)
	corner.Parent = button

	local function playPopAnimation()
		TweenService:Create(button, TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
			Size = size + UDim2.new(0, 6, 0, 6)
		}):Play()
		task.wait(0.15)
		TweenService:Create(button, TweenInfo.new(0.15), {
			Size = size
		}):Play()
	end

	local clickSound = Instance.new("Sound")
	clickSound.SoundId = CLICK_SOUND_ID
	clickSound.Parent = button

	button.MouseButton1Click:Connect(function()
		clickSound:Play()
		playPopAnimation()
	end)

	return button
end

-- Player list container
local playerListFrame = Instance.new("Frame")
playerListFrame.Size = UDim2.new(0.2, 0, 0.8, 0)
playerListFrame.Position = UDim2.new(0.02, 0, 0.1, 0)
playerListFrame.BackgroundColor3 = Color3.new(0, 0, 0)
local listCorner = Instance.new("UICorner")
listCorner.CornerRadius = UDim.new(0, 12)
listCorner.Parent = playerListFrame
playerListFrame.Parent = bgFrame

local playerScroll = Instance.new("ScrollingFrame")
playerScroll.Size = UDim2.new(1, 0, 1, 0)
playerScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
playerScroll.ScrollBarThickness = 4
playerScroll.BackgroundTransparency = 1
playerScroll.Parent = playerListFrame

local uiList = Instance.new("UIListLayout")
uiList.Padding = UDim.new(0, 5)
uiList.Parent = playerScroll

-- Store selected player
local selectedPlayer: Player? = nil

-- Utility: List all players
local function refreshPlayerList()
	playerScroll:ClearAllChildren()
	uiList.Parent = playerScroll
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= player then
			local btn = createButton(plr.Name, plr.DisplayName, UDim2.new(1, -10, 0, 40), UDim2.new(0, 5, 0, 0))
			btn.Parent = playerScroll

			btn.MouseButton1Click:Connect(function()
				selectedPlayer = plr
				for _, otherBtn in pairs(playerScroll:GetChildren()) do
					if otherBtn:IsA("TextButton") then
						otherBtn.BackgroundColor3 = Color3.new(0, 0, 0)
					end
				end
				btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			end)
		end
	end
end

-- Call once
refreshPlayerList()

-- TO DO: Create "Wear All" button, item list panel, and logic for fetching accessories/animations
-- TO DO: Create UI for accessories with clickable pop buttons for each item
-- TO DO: Make each item button equip the item using InsertService or HumanoidDescription
-- TO DO: Minimize and toggle buttons, animations for UI transitions
-- TO DO: Sanitize and add debounce for buttons as needed

-- You can continue to expand this from here
